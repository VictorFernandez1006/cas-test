name: Puppeteer

##########################################################################

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_BUILDCACHE_USER: ci
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  DUO_SECURITY_ADMIN_SKEY: ${{ secrets.DUO_SECURITY_ADMIN_SKEY }}
  DUO_SECURITY_ADMIN_IKEY: ${{ secrets.DUO_SECURITY_ADMIN_IKEY }}
  DUO_SECURITY_UNIVERSAL_PROMPT_SKEY: ${{ secrets.DUO_SECURITY_UNIVERSAL_PROMPT_SKEY }}
  DUO_SECURITY_UNIVERSAL_PROMPT_IKEY: ${{ secrets.DUO_SECURITY_UNIVERSAL_PROMPT_IKEY }}
  DUO_SECURITY_WEBSDK_SKEY: ${{ secrets.DUO_SECURITY_WEBSDK_SKEY }}
  DUO_SECURITY_WEBSDK_IKEY: ${{ secrets.DUO_SECURITY_WEBSDK_IKEY }}
  DUO_SECURITY_WEBSDK_AKEY: ${{ secrets.DUO_SECURITY_WEBSDK_AKEY }}
  DUO_SECURITY_API_HOST: ${{ secrets.DUO_SECURITY_API_HOST }}
  IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
  TERM: xterm-256color
  JDK_CURRENT: 11
  NODE_CURRENT: '16'
  SCENARIO_REGEX: ".*" # Use this to limit which tests run

on:
  push:
    branches:
      - 6.5.x
      - '!**.**.**'
      - 'pr-*'
  pull_request:
    types: [ labeled ]
    branches:
      - 6.5.x
      - '!**.**.**'

##########################################################################

jobs:
  cancel-previous-runs:
    if: ${{ (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  initialize:
    needs: [cancel-previous-runs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

##########################################################################
  
  puppeteer-scenarios:
    needs: [initialize]
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.get-scenarios.outputs.scenarios }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - id: print-scenarios
        run: ./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios | jq
      - id: get-scenarios
        run: echo "::set-output name=scenarios::$(./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios)]}"

##########################################################################
  puppeteer-tests:
    runs-on: ubuntu-latest
    needs: [puppeteer-scenarios]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scenario: ${{fromJSON(needs.puppeteer-scenarios.outputs.scenarios)}}
    name: ${{matrix.scenario}}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'temurin'
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set up Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_CURRENT }}
          cache: 'npm'
          cache-dependency-path: ./ci/tests/puppeteer/package.json
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: Run Tests
        run: ./ci/tests/puppeteer/run.sh --scenario $PWD/ci/tests/puppeteer/scenarios/${{matrix.scenario}}
##########################################################################
